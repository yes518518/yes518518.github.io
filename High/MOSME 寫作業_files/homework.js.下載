

var vm=new Vue({
    el:"#app",
    data:{
        //填充題
        fill_blanks:[
            // {topic:'測量工作必須遵循____和____的原則',questionId:'xxxxxx',order:'20'},
            // {topic:'題目題目_____題目題目_____題目題目',questionId:'yyyyyyy',order:'21'},
        ],
        //簡答題
        short_answers:[

        ],
        user_answered: 0,
        //螢幕大小
        screen_width:0,
        //style 綁定
        qnav_height: '100px',
        showbtn:{bottom:'-60px',opacity:'0'},
    },
    mounted:function(){
        this.getQuestions();

        this.screenWidth();
    },
    computed:{
        //答題進度條寬度
        process_width: function(){
            return (this.user_answered/(this.fill_blanks.length + this.short_answers.length))*100 +'%';
        }
    },
    methods:{
        getQuestions:function(){
            //ajax ....
            PSAAjax({
                url: '/Homework/getHomework',
                data: { examcode: examCode, type: type},
                onfinish: (obj)=> {
                    if (obj.resp == "0") {
                        //var fbData = [];
                        //var saData = [
                        //    { topic: '題目題目題目題目題目題目題目題目題目', questionId: 'ggggggg', order: '40' }
                        //];
                        this.fill_blanks = obj.fb_questions;
                        this.short_answers = obj.sa_questions;
                        console.log(this.fill_blanks);
                        if (type == 'restart') {

                            this.countAnswered();
                        }
                        var lazyLoadInstance = new LazyLoad({
                            // Your custom settings go here
                        });
                    } else {
                        alert(obj.msg);
                    }
                }
            });

        },
        getStudentAnswerFb: function(arguments){
            //接收填充題component資料
            var answers = arguments[0];
            var id = arguments[1];
            var targetQuestion = this.fill_blanks.find((question)=>{
                return question.questionId == id;
            })
            targetQuestion.answers = answers;
            this.countAnswered();
        },
        getStudentAnswerSa:function(arguments){
            //接收問答題component資料
            var data = arguments[0]; //檔案或文字資料
            var id = arguments[1];
            var type = arguments [2];
            var targetQuestion = this.short_answers.find((question)=>{
                return question.questionId == id;
            });
            switch(type){
            case 'file':
                targetQuestion.files = data;
                break;
            case 'text':
                targetQuestion.text = data;
                break;
            };
            this.countAnswered();
        },
        remark: function(arguments){
            var isRemarked = arguments[0];
            var id = arguments[1];
            var questionType = arguments[2];
            if(questionType === 'fb'){
                var questions = this.fill_blanks;
            }
            else if(questionType === 'sa'){
                var questions = this.short_answers;
            }
            var targetQuestion = questions.find((question)=>{
                return question.questionId == id;
            });
            if('isRemarked' in targetQuestion){
                targetQuestion.isRemarked = isRemarked;
            }
            else{
                this.$set(targetQuestion,'isRemarked',isRemarked); 
            }           
        },
        //題目總覽處，判斷 填充 是否作答
        isFbAnswered: function (question) {
            if ((question.answers)) {
                return !question.answers.every((blank)=>{
                    return blank == '';
                });        
            }
            else{
                return false
            }
        },
        //題目總覽處，判斷 問答 是否作答
        isSaAnswered: function(question){
            if (((question.text && question.text != '') || (question.answer && question.answer != '')) || (question.files && question.files.length > 0)) {
                //console.log(question.text);
                if (question.answer && question.answer != '' && typeof(question.text) == "undefined") {
                    question.text = Base64.decode(question.answer);
                }
                return true;
            }
            else{
                return false;
            }
        },
        //計算已答題
        countAnswered: function(){
            var answered = 0;
            this.fill_blanks.forEach((question)=>{
                if(this.isFbAnswered(question)){
                    answered++;
                }
            });
            this.short_answers.forEach((question)=>{
                if(this.isSaAnswered(question)){
                    answered++;
                }
            });
            this.user_answered = answered;
        },
        //滾動至每一題
        scrollToQuestion:function(id){
            var distance=this.$refs[id][0].$el.getBoundingClientRect().top+window.pageYOffset - 80;
            this.scrollTo(distance,200);
        },
        scrollTo:function(to, duration){
            Math.easeInOutQuad = function (t, b, c, d) {
                t /= d/2;
                if (t < 1) return c/2*t*t + b;
                t--;
                return -c/2 * (t*(t-2) - 1) + b;
            };
            const element = document.scrollingElement;
            const start = (element && element.scrollTop) || window.pageYOffset,
                change = to - start,
                increment = 20;
            let currentTime = 0;

            const animateScroll = function(){
                currentTime += increment;
                const val = Math.easeInOutQuad(currentTime, start, change, duration);
                window.scroll(0, val);
                if(currentTime < duration) {
                    window.setTimeout(animateScroll, increment);
                }
            };
          animateScroll();
        }, 
        //螢幕大小判定
        screenWidth:function(){
            this.screen_width=window.innerWidth;
            if(this.screen_width>768){
                this.qnav_height="100%";
            }else{
                this.qnav_height="100px";
            }
            window.onresize = () => {
                this.screen_width=window.innerWidth;
                if(this.screen_width>768){
                    this.qnav_height="100%";
                }else{
                    this.qnav_height="100px";
                }
            };
        },
        //小螢幕時顯示 題目總覽
        showQuestionNav:function(){
            this.qnav_height='100px';
            this.showbtn.bottom='-60px';
            this.showbtn.opacity='0';
        },
        hideQuestionNav:function(){
            this.qnav_height='0px';
            this.showbtn.bottom='10px';
            this.showbtn.opacity='1';
        },
        // 第一次繳交作業
        handin: function (type) {
            showLoading(true);
            // 先上傳或檔案
            this.uploadFiles(type);
            //for (var i = 0; i < this.short_answers.length; i++) {
            //    if (this.short_answers[i].files) {
            //        for (var j = 0; j < this.short_answers[i].files.length; j++) {
            //            var formdata = new FormData();
            //            var _file = this.short_answers[i].files[j];
            //            formdata.append('file', _file.file);
            //            formdata.append("examCode", examCode);
            //            formdata.append("questionId", this.short_answers[i].questionId);

            //            $.ajax({
            //                type: "POST",
            //                url: "/Homework/uploadFiles",
            //                data: formdata,
            //                async: false,
            //                cache: false,
            //                contentType: false,
            //                processData: false,
            //                success: function (result) {

            //                },
            //                error: function (result) { console.log(result); }
            //            });
            //        }
            //    }              
            //}

            // 再上傳作答
            var sa_answers = [];
            for (var i = 0; i < this.short_answers.length; i++) {
                sa_answers.push({ questionId: this.short_answers[i].questionId, text: (this.short_answers[i].text ? this.short_answers[i].text:'') });
            }
            var fb_answers = [];
            for (var i = 0; i < this.fill_blanks.length; i++) {
                var text = [];
                if (this.fill_blanks[i].answers.length > 0) {
                    for (var j = 0; j < this.fill_blanks[i].answers.length; j++) {
                        text.push(this.fill_blanks[i].answers[j]);
                    }
                }
                fb_answers.push({ questionId: this.fill_blanks[i].questionId, text: text });
            }
            PSAAjax({
                url: '/Homework/saveHomework',
                data: { subgroupid: subgroupid, examCode: examCode, remark: remark, remark2: remark2, sa_answers: sa_answers, fb_answers: fb_answers },
                onfinish: (obj) => {
                    if (obj.resp = "0") {
                        alert('作業已經送出');
                        //window.close();

                        setTimeout(function () {
                            location.href = '/uclasslist/uclassdetail_classwork/' + teacherid + '?subgroupcode=' + subgroupcode;
                        }, 2000);
                    }else{
                        alert(obj.msg);
                        showLoading(false);
                    }
                }
            });

            //console.log(this.short_answers);
            //console.log(this.fill_blanks)
        },
        // 重複繳交作業
        rehandin: function (type) {
            showLoading(true);
            var ismark = "";
            // 先確認是不是已被批改
            PSAAjaxSync({
                url: '/Homework/IsMarkScore',
                data: { examCode: examCode },
                onfinish: (obj) => {
                    ismark = obj.resp;
                }
            });
            if (ismark == "-1") {
                alert('老師已批改成績，無法再次繳交作業!');
                showLoading(false);
                return false;
            }

            // 先上傳或檔案
            this.uploadFiles(type);
            // 再上傳作答
            var sa_answers = [];
            for (var i = 0; i < this.short_answers.length; i++) {
                sa_answers.push({ questionId: this.short_answers[i].questionId, text: (this.short_answers[i].text ? this.short_answers[i].text : '') });
            }
            var fb_answers = [];
            for (var i = 0; i < this.fill_blanks.length; i++) {
                var text = [];
                if (this.fill_blanks[i].answers.length > 0) {
                    for (var j = 0; j < this.fill_blanks[i].answers.length; j++) {
                        text.push(this.fill_blanks[i].answers[j]);
                    }
                }
                fb_answers.push({ questionId: this.fill_blanks[i].questionId, text: text });
            }
            PSAAjax({
                url: '/Homework/reSaveHomework',
                data: { subgroupid: subgroupid, examCode: examCode, remark: remark, remark2: remark2, sa_answers: sa_answers, fb_answers: fb_answers },
                onfinish: (obj) => {
                    if (obj.resp = "0") {
                        alert('作業已經送出');
                        //window.close();

                        setTimeout(function () {
                            location.href = '/uclasslist/uclassdetail_classwork/' + teacherid + '?subgroupcode=' + subgroupcode;
                        }, 2000);
                    } else {
                        alert(obj.msg);
                        showLoading(false);
                    }
                }
            });

            //console.log(this.short_answers);
            //console.log(this.fill_blanks)
        },
        uploadFiles: function(type) {
            for (var i = 0; i < this.short_answers.length; i++) {
                if (this.short_answers[i].files || type=='retart') {
                    var temp = [];
                    for (var k = 0; k < this.short_answers[i].files.length; k++) {
                        temp.push(this.short_answers[i].files[k].fileName);
                    }

                    if (type == 'restart' && this.short_answers[i].files.length == 0) {

                        var formdata = new FormData();
                        formdata.append('index', '0');
                        formdata.append('filename', temp);
                        
                        formdata.append('type', type);
                        formdata.append('file', null);
                        formdata.append("examCode", examCode);
                        formdata.append("questionId", this.short_answers[i].questionId);
                        
                        $.ajax({
                            type: "POST",
                            url: "/Homework/uploadFiles",
                            data: formdata,
                            async: false,
                            cache: false,
                            contentType: false,
                            processData: false,
                            success: function (result) {
                            },
                            error: function (result) { console.log(result); }
                        });
                    }
                    for (var j = 0; j < this.short_answers[i].files.length; j++) {
                        var formdata = new FormData();
                        var _file = this.short_answers[i].files[j];
                        if (j == 0) {
                            formdata.append('index', j.toString());
                            formdata.append('filename', temp);
                        }
                        formdata.append('type', type);
                        formdata.append('file', _file.file);
                        formdata.append("examCode", examCode);
                        formdata.append("questionId", this.short_answers[i].questionId);

                        $.ajax({
                            type: "POST",
                            url: "/Homework/uploadFiles",
                            data: formdata,
                            async: false,
                            cache: false,
                            contentType: false,
                            processData: false,
                            success: function (result) {
                            },
                            error: function (result) { console.log(result); }
                        });
                    }
                }
            }
        }
    }
});

window.alert = function(msg){
  var alert_container = document.getElementById('alertContainer');
  if(alert_container){
    
  }
  else{
    alert_container = document.createElement('div');
    alert_container.id = 'alertContainer';
    alert_container.classList.add('alert_container');
    document.body.appendChild(alert_container);
  }
  newAlert();
  function newAlert(){
    var div = document.createElement('div');
    div.classList.add('each_alert');
    div.innerHTML = `<div class="alert alert-danger mb-0 d-flex" role="alert"><div>${msg}</div></div>`;
    var close_button = document.createElement('button');
    close_button.classList.add('close');
    close_button.innerHTML='<span aria-hidden="true">&times;</span>';
    close_button.addEventListener('click',()=>{
      removeAlert(div);
      clearTimeout(timeoutRemove);
    });
    div.firstChild.appendChild(close_button);
    alert_container.appendChild(div);
    var timeoutRemove = setTimeout(()=>{
      removeAlert(div);
    },5000)
  }  

  function removeAlert(el){
    alert_container.style.transition = 'transform .3s';
    alert_container.style.transform = `translateY(${el.clientHeight+10}px)`;
    setTimeout(()=>{
      alert_container.style.transition = 'unset';
      alert_container.style.transform = `unset`;
      el.remove();
    },300)
  }
}

